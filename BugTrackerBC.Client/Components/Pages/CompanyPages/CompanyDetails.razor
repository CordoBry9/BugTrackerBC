@page "/company"
@using BugTrackerBC.Client.Models
@using BugTrackerBC.Client.Services.Interfaces
@inject ICompanyDTOService CompanyDTOService
@inject NavigationManager Nav
@rendermode InteractiveServer
@if (company != null)
{
    <div>
        <strong>@company.Name</strong>
    </div>
    <ul>
        Employees
        @if (companymembers != null)
        {
            @foreach (UserDTO member in companymembers)
            {
                <li>
                    Name: @member.FullName Role: @member.Role
                </li>
            }
        }

    </ul>
}

@code {

    [Parameter]
    public CompanyDTO? CompanyId { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState>? AuthStateTask { get; set; }

    private CompanyDTO? company;
    private ProjectDTO? project;
    private UserInfo? userInfo;
    private TicketDTO? ticket;
    private UserDTO? member;
    private string? role;
    private IEnumerable<UserDTO>? companymembers;

    protected override async Task OnInitializedAsync()
    {
        userInfo = await UserInfoHelper.GetUserInfoAsync(AuthStateTask);
        company = await CompanyDTOService.GetCompanyByIdAsync(userInfo!.CompanyId);
        companymembers = await CompanyDTOService.GetCompanyMembersAsync(userInfo!.CompanyId);
        role = await CompanyDTOService.GetUserRoleAsync(userInfo!.UserId, userInfo.CompanyId);
    }

}
